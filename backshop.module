<?php

/**
 * @file
 * Defines the Backshop Store entity and common library functions.
 */

define('BACKSHOP_ENTITY_ACTIVE', 1);
define('BACKSHOP_ENTITY_DISABLED', 0);

/**
 * Implements hook_autoload_info().
 */
function backshop_autoload_info() {
  return array(
    'BackshopStore' => 'includes/backshop.entity.inc',
    'BackshopVersionedEntityStorageController' => 'includes/backshop.entity.inc',
  );
}

/**
 * Implements hook_entity_info().
 */
function backshop_entity_info() {
  $info = array();

  $info['backshop_store'] = array(
    'label' => t('Store'),
    'bundle label' => t('Type'),
    'controller class' => 'BackshopVersionedEntityStorageController',
    'entity class' => 'BackshopStore',
    'base table' => 'backshop_store',
    'revision table' => 'backshop_store_revision',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'store_id' ,
      'revision' => 'revision_id',
      'bundle' => 'type',
    ),
    'bundle keys' => array(
      'bundle' => 'type',
    ),
    'static cache' => TRUE,

    'bundles' => array(
      'online' => array(
        'label' => t('Online store'),
        'admin' => array(
          'path' => 'admin/store/configuration/store-type',
          'access arguments' => array('administer backshop_store entities'),
        ),
      ),
    ),

    'view modes' => array(
      'full' => array(
        'label' => t('Full display'),
        'custom settings' => FALSE,
      ),
      'summary' => array(
        'label' => t('Summary display'),
        'custom settings' => TRUE,
      )
    ),
  );

  return $info;
}

/**
 * Returns a single loaded Backshop entity.
 *
 * @param string $entity_type
 *   The type of the entity to load.
 * @param int $id
 *   Unique ID of the entity to load.
 *
 * @return EntityInterface|bool
 *   The fully loaded entity or FALSE if not found.
 */
function backshop_entity_load_single($entity_type, $id) {
  $result = entity_load($entity_type, array($id));
  return reset($result);
}